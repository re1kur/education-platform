
custom:
  saga:
    exchange: saga.exchange
    publish-queues:
      get-goods-info-command:
        routing-key: priority.is.created
      block-user-balance-command:
        routing-key: goods.info.is.received
      reject-order-command:
        routing-key: goods.or.balance.commands.are.failed
      create-transaction-command:
        routing-key: balance.is.blocked
      process-user-balance-command:
        routing-key: transaction.is.created
      unblock-user-balance-command:
        routing-key: transaction.create.is.failed
      complete-transaction-command:
        routing-key: balance.is.processed
      approve-order-command:
        routing-key: transaction.is.completed
    handle-queues:
      order-created:
        name: priority.created.queue
      goods-info-received:
        name: goods.info.received.queue
      goods-info-receive-failed:
        name: goods.info.receive.failed.queue
      user-balance-blocked-queue:
        name: user.balance.blocked.queue
      user-balance-block-failed-queue:
        name: user.balance.block.failed.queue
      transaction-created-queue:
        name: transaction.created.queue
      transaction-create-failed-queue:
        name: transaction.create.failed.queue
      user-balance-unblocked-queue:
        name: user.balance.unblocked.queue
      user-balance-processed-queue:
        name: user.balance.processed.queue
      transaction-completed-queue:
        name: transaction.completed.queue

  message-broker:
    exchange: priority.service.exchange
    listen-queues:
      reject-order-command:
        name: reject.priority.command
      approve-order-command:
        name: approve.priority.command
    publish-queues:
      order-created:
        routing-key: priority.created
  jwt:
    publicKeyPath: /tmp/public.key